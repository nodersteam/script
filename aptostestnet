#!/bin/bash

# Устанавливаем перменные 
echo "export WORKSPACE=testnet" >> $HOME/.bash_profile
echo "export PUBLIC_IP=$(curl -s ifconfig.me)" >> $HOME/.bash_profile
source $HOME/.bash_profile
#Апдейтим зависимости
sudo apt update && sudo apt upgrade -y

#Ставим грипер и разархиватор
sudo apt-get install jq unzip -y
sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.23.1/yq_linux_amd64 && chmod +x /usr/local/bin/yq


#Ставим докер
sudo apt-get install ca-certificates curl gnupg lsb-release -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io -y


#Ставим докер копос
echo -e "\e[1m\e[32m4.1 Installing Docker Compose v2.3.3 ... \e[0m" && sleep 1
mkdir -p ~/.docker/cli-plugins/
curl -SL https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
chmod +x ~/.docker/cli-plugins/docker-compose
sudo chown $USER /var/run/docker.sock

# Качаем кли (бинарник) аптоса
wget -qO aptos-cli.zip https://github.com/aptos-labs/aptos-core/releases/download/aptos-cli-v0.1.1/aptos-cli-0.1.1-Ubuntu-x86_64.zip
unzip aptos-cli.zip -d /usr/local/bin
chmod +x /usr/local/bin/aptos
rm aptos-cli.zip

#Создаем рабочую папку куда установится контейнер с докером
mkdir ~/$WORKSPACE && cd ~/$WORKSPACE

# Качаем базовые конфиги
wget -qO docker-compose.yaml https://raw.githubusercontent.com/aptos-labs/aptos-core/main/docker/compose/aptos-node/docker-compose.yaml
wget -qO validator.yaml https://raw.githubusercontent.com/aptos-labs/aptos-core/main/docker/compose/aptos-node/validator.yaml
wget -qO fullnode.yaml https://raw.githubusercontent.com/aptos-labs/aptos-core/main/docker/compose/aptos-node/fullnode.yaml

# Генерим ключи
aptos genesis generate-keys --output-dir ~/$WORKSPACE

# Создаем конфиг для валика
aptos genesis set-validator-configuration \
  --keys-dir ~/$WORKSPACE --local-repository-dir ~/$WORKSPACE \
  --username <МЕНЯЕМ ЭТУ ЗАЛУПУ НА ИМЯ КОМУ СТАВИМ НОДУ(Кавычки убирай)> \
  --validator-host $PUBLIC_IP:6180 \
  --full-node-host $PUBLIC_IP:6182
  
# ГЕНИРИРУЕМ ИМЕННЫЕ КЛЮЧИ
mkdir keys
aptos key generate --output-file keys/<ТАК ЖЕ ИМЯ КОМУ СТАВИМ(КАВЫЧКИ УБИРАЙ, И ВООБЩЕ КОГДА В ГАЙДЕ ИЛИ НАТИВКЕ ВИДИШЬ КАВЫЧКИ ТАКИЕ - СНОСИ НАХУЙ)>

# СОЗДАЕМ ФАЙЛ ПЕРСОНАЛЬНОГО КОНФИГА
tee layout.yaml > /dev/null <<EOF
---
root_key: "<СЮДА ВСТАВЛЯЕМ КЛЮЧ, КОТОРЫЙ СОБРАЛСЯ В ПРОШЛОЙ КОМАНДЕ(ОН ВАЛЯЕТСЯ В ПАПКЕ kyes/ИМЯ КОТОРЕ НАПИСАЛ)"
users:
  - <ИМЯ КОТОРОЕ НАПИСАЛ В ПРОШЛЫХ КОМАНДАХ>
chain_id: 23
EOF

# качаем фрейм ворк
wget -qO framework.zip https://github.com/aptos-labs/aptos-core/releases/download/aptos-framework-v0.1.0/framework.zip
unzip framework.zip
rm framework.zip

# компилиреум генезис и прочую хуету
aptos genesis generate-genesis --local-repository-dir ~/$WORKSPACE --output-dir ~/$WORKSPACE

# запускаем докер
docker compose up -d

#Смотрим синхру
curl 127.0.0.1:9101/metrics 2> /dev/null | grep aptos_state_sync_version | grep type \n \e[0m" 

#Логи фул ноды
docker logs -f testnet-fullnode-1 --tail 50

#Логи валика
docker logs -f testnet-validator-1 --tail 50

#Вывод инфы для заполнения
cat ~/$WORKSPACE/private-keys.yaml
