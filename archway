#!/bin/bash

while true
do

# Logo

echo "============================================================"
curl -s https://raw.githubusercontent.com/AlekseyMoskalev1/script/main/Noders.sh | bash
echo "============================================================"


PS3='Select an action: '
options=(
"Prepare the server for installation" 
"Install <PROJECT> Node" 
"Create wallet"
"Log Node" 
"Check node status" 
"Request for tokens in Discord" 
"Balance" 
"Create validator" 
"Check validator"
"Parametrs"  
"Exit")
select opt in "${options[@]}"
               do
                   case $opt in
                   
"Prepare the server for installation")
echo "============================================================"
echo "Preparation has begun"
echo "============================================================"

#INSTALL DEPEND               
sudo apt update && sudo apt upgrade -y
sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essential bsdmainutils git make ncdu gcc git jq chrony liblz4-tool -y

#INSTALL GO
wget https://golang.org/dl/go1.17.3.linux-amd64.tar.gz; \
rm -rv /usr/local/go; \
tar -C /usr/local -xzf go1.17.3.linux-amd64.tar.gz && \
rm -v go1.17.3.linux-amd64.tar.gz && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile && \
source ~/.bash_profile && \
go version

echo "============================================================"
echo "The server is ready!"
echo "============================================================"
break
;;
            
"Install <PROJECT> Node")
echo "============================================================"
echo "Set parameters"
echo "============================================================"
echo "Enter NodName:"
echo "============================================================"
                
read ARCHWAYNODE
ARCHWAYNODE=$ARCHWAYNODE
echo 'export ARCHWAYNODE='${ARCHWAYNODE} >> $HOME/.bash_profile

echo "============================================================"
echo "Enter WalletName:"
echo "============================================================"
               
read ARCHWAYWALLET
ARCHWAYWALLET=$ARCHWAYWALLET
echo 'export ARCHWAYWALLET='${ARCHWAYWALLET} >> $HOME/.bash_profile
ARCHWAYCHAIN=""augusta-1""
echo 'export ARCHWAYCHAIN='${ARCHWAYCHAIN} >> $HOME/.bash_profile
source $HOME/.bash_profile

echo "============================================================"
echo "Installation started"
echo "============================================================"

cd $HOME
mkdir archway && cd archway
wget "https://github.com/Northa/archway_bin/releases/download/v0.0.3/archwayd"

chmod +x archwayd
sudo mv archwayd /usr/local/bin/
archwayd init ${ARCHWAYNODE} --chain-id $ARCHWAYCHAIN
archwayd config chain-id $ARCHWAY_CHAIN
seeds="2f234549828b18cf5e991cc884707eb65e503bb2@34.74.129.75:31076,c8890bcde31c2959a8aeda172189ec717fef0b2b@95.216.197.14:26656"
PEERS="1f6dd298271684729d0a88402b1265e2ae8b7e7b@162.55.172.244:26656"
sed -i.bak -e "s/^seeds *=.*/seeds = \"$seeds\"/; s/^persistent_peers *=.*/persistent_peers = \"$PEERS\"/" $HOME/.archway/config/config.toml

external_address=$(wget -qO- eth0.me)
sed -i.bak -e "s/^external_address = \"\"/external_address = \"$external_address:26656\"/" $HOME/.archway/config/config.toml

sed -i.bak -e "s/prometheus = false/prometheus = true/" $HOME/.archway/config/config.toml
wget -O $HOME/.archway/config/genesis.json "https://github.com/maxzonder/archway/raw/main/genesis.json"

pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="5000"
pruning_interval="10"

sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.archway/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.archway/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.archway/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.archway/config/app.toml

tee $HOME/archwayd.service > /dev/null <<EOF
[Unit]
Description=ARCHWAY
After=network.target
[Service]
Type=simple
User=$USER
ExecStart=$(which archwayd) start --x-crisis-skip-assert-invariants
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF
sudo mv $HOME/archwayd.service /etc/systemd/system/

sudo systemctl daemon-reload
sudo systemctl enable archwayd
sudo systemctl restart archwayd

echo "============================================================"
echo "Installation complete!"
echo "============================================================"
break
;;

"Create wallet")
echo "============================================================"
echo "Save mnemonic!"
echo "============================================================"
               
archwayd keys add $ARCHWAYWALLET
ARCHWAYADDRWALL=$(archwayd keys show $ARCHWAYWALLET -a)
ARCHWAYVAL=$(archwayd keys show $ARCHWAYWALLET --bech val -a)
echo 'export ARCHWAYVAL='${ARCHWAYVAL} >> $HOME/.bash_profile
echo 'export ARCHWAYADDRWALL='${ARCHWAYADDRWALL} >> $HOME/.bash_profile
source $HOME/.bash_profile

echo "============================================================"
echo "Wallet addres: $ARCHWAYADDRWALL"
echo "Valoper addres: $ARCHWAYVAL"
echo "============================================================"
               
break
;;

"Check node status")
echo "============================================================"
echo "Synchronization status must be false to continue!"
echo "============================================================"
echo "Synchronization status = $(curl -s localhost:26657/status)"
echo "Block height = $(celestia-appd status 2>&1 | jq ."SyncInfo"."latest_block_height")"
echo "Skipped Blocks and Validator Creation Block $(celestia-appd q slashing signing-info $(celestia-appd tendermint show-validator))"
echo "============================================================"
break
;;

"Create validator")
echo "============================================================"
echo "Synchronization status must be false to continue!"
echo "============================================================"
               
archwayd tx staking create-validator \
  --amount 9000000uaugust \
  --from $ARCHWAYWALLET \
  --commission-max-change-rate "0.01" \
  --commission-max-rate "0.20" \
  --commission-rate "0.01" \
  --min-self-delegation "1" \
  --pubkey $(archwayd tendermint show-validator) \
  --moniker $ARCHWAYNODE \
  --chain-id $ARCHWAYCHAIN \
  --gas 200000 \
  --fees 1uaugust
break
;;

"Parametrs and balance")
echo "============================================================"
echo "Your parameters"
echo "============================================================"
echo "Name Node: $ARCHWAYNODE"
echo "Address: $ARCHWAYADDRWALL" 
echo "Your balance: $(archwayd query bank balances $ARCHWAYADDRWALL)"
echo "============================================================"
break
;

"Check validator") 
echo "============================================================"
echo "Account request: $(celestia-appd q auth account $(celestia-appd keys show <name_wallet> -a) -o text)"
echo "Validator info: $(archwayd q staking validator $ARCHWAYVAL)"
echo "============================================================"
break
;;

"Request for tokens in Discord")
echo "============================================================"
echo "To request tokens, you need to go to the Discord server in the
fauccet channel and request tokens.
Server in Discord - https://discord.gg/GGp2p6MQ"
echo "============================================================"
echo "Copy and paste this \033[32m !faucet ${ARCHWAYADDRWALL} \033[37m"
echo "============================================================"
break
;;

"Log Node")
journalctl -u archwayd -f -o cat
break
;;

"Delete node")
systemctl stop
systemctl disable
rm -r
break
;;

"Exit")
exit
;;

*) echo "invalid option $REPLY";;
esac
done
done
