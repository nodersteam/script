#!/bin/bash

while true
do

# Logo

echo "========================================================================================================================"
curl -s https://raw.githubusercontent.com/AlekseyMoskalev1/script/main/Noders.sh | bash
echo "========================================================================================================================"

# Menu

PS3='Select an action: '
options=(
"Prepear serever"
"Install Node"
"Check Log"
"Check Sync"
"Check BlockHigh"
"Check Balance"
"Request tokens in discord"
"Create Validator"
"Delete Node"
"Exit")
select opt in "${options[@]}"
do
case $opt in

"Delete Node")

sudo systemctl stop stafihubd
sudo systemctl disable stafihubd
rm -r $HOME/.stafihub
rm -r $HOME/stafihub
rm -f /etc/systemd/system/stafihubd.service

break
;;

"Check Sync")
echo "============================================================"
echo "Synchronization = $(curl -s localhost:26657/status | jq .result.sync_info.catching_up)"
echo "============================================================"
break
;;

"Check BlockHigh")
echo "============================================================"
echo "BlockHigh = $(stafihubd status | jq .SyncInfo.latest_block_height)"
echo "============================================================"
break
;;

"Prepear serever")
#UPDATE APT
sudo apt update && sudo apt upgrade -y
sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essential bsdmainutils git make ncdu gcc git jq chrony liblz4-tool -y

#INSTALL GO
wget https://golang.org/dl/go1.17.3.linux-amd64.tar.gz; \
rm -rv /usr/local/go; \
tar -C /usr/local -xzf go1.17.3.linux-amd64.tar.gz && \
rm -v go1.17.3.linux-amd64.tar.gz && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile && \
source ~/.bash_profile && \
go version

break
;;

"Install Node")
echo "============================================================"
echo "Install start"
echo "============================================================"
echo "Setup NodeName:"
echo "============================================================"
read NODENAME
echo "============================================================"
echo "Setup WalletName:"
echo "============================================================"
read WALLETNAME
echo export NODENAME=${NODENAME} >> $HOME/.bash_profile
echo export WALLETNAME=${WALLETNAME} >> $HOME/.bash_profile
echo export CHAIN_ID=stafihub-public-testnet-2 >> $HOME/.bash_profile
source ~/.bash_profile

rm -rf $HOME/stafihub $HOME/.stafihub
cd $HOME
#INSTALL
git clone --depth 1 --branch public-testnet-v2 https://github.com/stafihub/stafihub
cd $HOME/stafihub
make install

rm $HOME/.stafihub/config/genesis.json
stafihubd init $NODENAME --chain-id $CHAIN_ID
stafihubd config chain-id $CHAIN_ID

echo "============================================================"
echo "Be sure to write down the mnemonic!"
echo "============================================================"
#WALLET
stafihubd keys add $WALLETNAME

stafihubd tendermint unsafe-reset-all --home ~/.stafihub
rm $HOME/.stafihub/config/genesis.json
wget -O $HOME/.stafihub/config/genesis.json "https://raw.githubusercontent.com/stafihub/network/main/testnets/stafihub-public-testnet-2/genesis.json"
wget -O $HOME/.stafihub/config/addrbook.json "https://raw.githubusercontent.com/StakeTake/guidecosmos/main/stafihub/stafihub-public-testnet-2/addrbook.json"
external_address=$(wget -qO- eth0.me)
peers="6790dbe6b3e858dfeed37387b4ee6711a029d61d@23.88.100.175:26656,4e2441c0a4663141bb6b2d0ea4bc3284171994b6@46.38.241.169:26656,79ffbd983ab6d47c270444f517edd37049ae4937@23.88.114.52:26656"
sed -i.bak -e "s/^external_address *=.*/external_address = \"$external_address:26656\"/; s/^persistent_peers *=.*/persistent_peers = \"$peers\"/" $HOME/.stafihub/config/config.toml

# config pruning
pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="0"
pruning_interval="10"

sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.stafihub/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.stafihub/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.stafihub/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.stafihub/config/app.toml
sed -i.bak -e "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"0.01ufis\"/" $HOME/.stafihub/config/app.toml
sed -i '/\[grpc\]/{:a;n;/enabled/s/false/true/;Ta};/\[api\]/{:a;n;/enable/s/false/true/;Ta;}' $HOME/.stafihub/config/app.toml


tee $HOME/stafihubd.service > /dev/null <<EOF
[Unit]
Description=stafihub
After=network.target
[Service]
Type=simple
User=$USER
ExecStart=$(which stafihubd) start
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF

sudo mv $HOME/stafihubd.service /etc/systemd/system/

# start service
sudo systemctl daemon-reload
sudo systemctl enable stafihubd
sudo systemctl start stafihubd

break
;;

"Check Log")

journalctl -u stafihubd -f -o cat

break
;;


"Check Balance")
stafihubd q bank balances $(stafihubd keys show $WALLETNAME -a --bech acc)
break
;;

"Create Validator")
stafihubd tx staking create-validator \
  --amount 1000000ufis \
  --from $WALLETNAME \
  --commission-max-change-rate "0.05" \
  --commission-max-rate "0.20" \
  --commission-rate "0.05" \
  --min-self-delegation "1" \
  --pubkey $(stafihubd tendermint show-validator) \
  --moniker $NODENAME \
  --chain-id $CHAIN_ID \
  --gas 300000 \
  --gas-prices 0.025ufis \
  -y
break
;;

"Request tokens in discord")
echo "========================================================================================================================"
echo "You need to go to the Discord server https://discord.gg/hHNbaBSV
and request tokens in the validator channel"
echo "========================================================================================================================"

break
;;

"Exit")
exit
;;
*) echo "invalid option $REPLY";;
esac
done
done
